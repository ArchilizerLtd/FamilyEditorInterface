<Window x:Class="FamilyEditorInterface.WPF.FamilyParameterView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FamilyEditorInterface.WPF;assembly="    
        mc:Ignorable="d"
        x:Name="MainWindow"
        TextElement.FontWeight="Light"
        TextElement.FontSize="12"
        TextOptions.TextFormattingMode="Ideal"
        Background="#FAFAFA"
        Title="Family Parameters" Height="600" MaxWidth="420" Width="420" MinWidth="420"
        Closing="MainWindow_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FamilyEditorInterface;component/Resources/Theme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:RevitToUnitConverter x:Key="ReverseUnitConverter"></local:RevitToUnitConverter>
            <local:MultiplyConverter x:Key="MultiplyConverter"></local:MultiplyConverter>
            <local:DoubleToStringConverter x:Key="DoubleToStringConverter"></local:DoubleToStringConverter>
            <local:BoolToColorConverter x:Key="BoolToColorConverter"></local:BoolToColorConverter>
            <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></local:BoolToVisibilityConverter>
            <local:BoolToCheckedConverter x:Key="BoolToCheckedConverter"></local:BoolToCheckedConverter>
            <local:BoolToWidthConverter x:Key="B2WC"></local:BoolToWidthConverter>
            <local:BoolToMarginConverter x:Key="B2MC"></local:BoolToMarginConverter>
            <local:PrecisionConverter x:Key="PrecisionConverter"></local:PrecisionConverter>
            <!--Colors-->
            <SolidColorBrush x:Key="in-use" Color="#FFBB00"/>
            <SolidColorBrush x:Key="built-in" Color="#FF773D"/>
            <SolidColorBrush x:Key="shared" Color="#C4AF8D"/>
            <SolidColorBrush x:Key="label" Color="#F75590"/>
            <SolidColorBrush x:Key="inF" Color="#8F4394"/>
            <SolidColorBrush x:Key="fromF" Color="#F19143"/>
            <SolidColorBrush x:Key="report" Color="#E6E6E5"/>
            <SolidColorBrush x:Key="Background" Color="#FAFAFA"/>
            <!--Tag Styles-->
            <Style TargetType="{x:Type Border}" x:Key="Tag">
                <Style.Setters>
                    <Setter Property="Tag" Value="Tag"/>
                    <Setter Property="CornerRadius" Value="5"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="MaxHeight" Value="12"/>
                </Style.Setters>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="TagText">
                <Style.Setters>
                    <Setter Property="FontSize" Value="8"/>
                    <Setter Property="FontWeight" Value="Regular"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                </Style.Setters>
            </Style>
            <!--Tags' ContentControl DataTebmpalte-->
            <DataTemplate x:Key="TagElement">
                <Border Style="{StaticResource Tag}" Visibility="{Binding Visible, Converter={StaticResource BoolToVisibilityConverter}}" 
                        Width="{Binding Converter={StaticResource B2WC}}" Margin="{Binding Converter={StaticResource B2MC}}"
                        Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl, AncestorLevel=1}}">
                    <TextBlock Text="{Binding Path=Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl, AncestorLevel=1}}" Style="{StaticResource TagText}"/>
                </Border>
            </DataTemplate>
            <!--Text Value Boxes-->
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="EnterText">
                <Style.Setters>
                    <Setter Property="local:InputBindingsManager.UpdatePropertySourceWhenEnterPressed" Value="TextBox.Text"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FontSize" Value="11"/>
                    <Setter Property="MinWidth" Value="50"/>
                    <Setter Property="Padding" Value="6"/>
                    <Setter Property="MaxWidth" Value="160"/>
                    <Setter Property="Height" Value="auto"/>
                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                    <Setter Property="Background" Value="White"/>
                </Style.Setters>
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="15"/>
                    </Style>
                </Style.Resources>
            </Style>
            <!--Expander Data Template-->
            <DataTemplate x:Key="ExpanderHeader">
                <TextBlock Text="{Binding}" FontSize="14" FontWeight="Light" Margin="0 0 24 0" HorizontalAlignment="Right"/>
            </DataTemplate>
            <Style x:Key="RightExpander" TargetType="{x:Type Expander}">
                <Style.Setters>
                    <Setter Property="HeaderTemplate" Value="{StaticResource ExpanderHeader}"/>
                    <Setter Property="ExpandDirection" Value="Down"/>
                    <Setter Property="DockPanel.Dock" Value="Top"/>
                    <Setter Property="Background" Value="{StaticResource Background}"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                    <Setter Property="FlowDirection" Value="RightToLeft"/>
                    <Setter Property="Template" Value="{DynamicResource ExpanderControlTemplateOverride}"/>
                </Style.Setters>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="Header">
                <Style.Setters>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontWeight" Value="Medium"/>
                    <Setter Property="TextTrimming" Value="WordEllipsis"/>
                </Style.Setters>
            </Style>
            <Style x:Key="ItemControlGridStyle" TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="0 6 0 6"/>
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Activated}" Value="true">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Grid.Background).Color" From="Transparent" To="White" DecelerationRatio=".9" Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Grid.Background).Color" From="White" To="Transparent" AccelerationRatio=".9" Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel Margin="25,25,20,25">
        <!--Control Bar-->
        <DockPanel DockPanel.Dock="Top" Margin="0,5,0,15">
            <TextBlock Text="{Binding DocumentName, Mode=OneWay}" Style="{StaticResource Header}" ToolTip="{Binding _DocumentName, Mode=OneWay}" FontSize="16" HorizontalAlignment="Center" FontWeight="Medium"/>
        </DockPanel>
        <!--Control Bar-->
        <DockPanel DockPanel.Dock="Bottom" Margin="0,20,0,0">
            <Button Style="{StaticResource ToolbarButton}" x:Name="btnShuffle" Content="{StaticResource ShuffleIcon}" Command="{Binding ShuffleCommand}" ToolTip="Shuffle Parameter Values. /n This command will attempt to make slight change to all editable parameters. Use with caution."/>
            <Button Style="{StaticResource ToolbarButton}" x:Name="btnDeleteAllUnused" Content="{StaticResource DeleteIcon}" Command="{Binding DeleteUnusedCommand}" ToolTip="Delete all unused Parameters"/>
            <Button Style="{StaticResource ToolbarButton}" x:Name="btnSettings" Content="{StaticResource ViewIcon}" Command="{Binding EditableCommand}" ToolTip="Editable Parameters. /n Reporting parameters and parameters driven by formulas cannot be edited."/>
            <Button Style="{StaticResource ToolbarButton}" x:Name="btnSettingsTest" Content="{StaticResource ToggleIcon}" Command="{Binding ToggleCommand}" ToolTip="Toggle Tags"/>
            <Button Style="{DynamicResource SimpleButtonStyle}" x:Name="btnDialogOk" Click="BtnDialogOk_Click" Content="Close" Width="95"/>
        </DockPanel>
        <!--Parameters-->
        <ScrollViewer x:Name="MainCanvas" VerticalScrollBarVisibility="Auto" MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type DockPanel}, Mode=FindAncestor}}" Margin="0,5,0,0">
            <DockPanel DockPanel.Dock="Top" Margin="0 0 10 0">
                <!--Debug-->
                <Expander Visibility="Collapsed" Style="{StaticResource RightExpander}" x:Name="Debug" IsExpanded="True" Header="Test Expander">
                    <DockPanel FlowDirection="LeftToRight" LastChildFill="True">
                        <Grid Style="{StaticResource ItemControlGridStyle}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <!--The Name-->
                            <Border Background="White" CornerRadius="15">
                                <Border.Effect>
                                    <DropShadowEffect Color="Gray" Direction="300" BlurRadius="8" ShadowDepth="3" Opacity="0.25"/>
                                </Border.Effect>
                            </Border>
                            <TextBox ToolTip="Name" Style="{StaticResource EnterText}" Text="Property Name" TextChanged="TextBox_TextChanged"/>
                            <!--The Value Slider-->
                            <Slider Style="{DynamicResource RoundSliderStyle}" Value="100" HorizontalContentAlignment="Center"
                                Maximum="200" Grid.Column="1" Margin="10 2 10 0" Foreground="{Binding IsUsed, Converter={StaticResource BoolToColorConverter}}"/>
                            <!--The Value-->
                            <Border Background="White" CornerRadius="15" Grid.Column="2">
                                <Border.Effect>
                                    <DropShadowEffect Color="Gray" Direction="300" BlurRadius="8" ShadowDepth="3" Opacity="0.25"/>
                                </Border.Effect>
                            </Border>
                            <TextBox Text="100" Grid.Column="2" Style="{StaticResource EnterText}" PreviewTextInput="txtAnswer_PreviewTextInput"/>
                        </Grid>
                    </DockPanel>
                </Expander>
                <Separator Visibility="Hidden" Style="{DynamicResource SimpleSeparatorStyle}"/>
                <!--Value Parameters-->
                <Expander Style="{StaticResource RightExpander}" x:Name="ValueParameters" IsExpanded="True" Header="Value Parameters">
                    <DockPanel FlowDirection="LeftToRight" LastChildFill="True">
                        <ItemsControl ItemsSource="{Binding ValueParameters}" Grid.IsSharedSizeScope="True" DockPanel.Dock="Top">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Style="{StaticResource ItemControlGridStyle}" Visibility="{Binding Visible, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="10"/>
                                        </Grid.ColumnDefinitions>
                                        <!--The Name-->
                                        <Border Background="White" CornerRadius="15">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Gray" Direction="300" BlurRadius="8" ShadowDepth="3" Opacity="0.25"/>
                                            </Border.Effect>
                                        </Border>
                                        <TextBox ToolTip="{Binding Name}" Style="{StaticResource EnterText}" Foreground="{Binding Editable, Converter={StaticResource BoolToColorConverter}}">
                                            <TextBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
                                                    <MenuItem Header="{Binding TypeOrInstance}" Command="{Binding TypeToInstanceCommand}"/>
                                                </ContextMenu>
                                            </TextBox.ContextMenu>
                                            <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <local:NameValidator/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox>
                                        <!--Tags-->
                                        <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="2 0">
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource shared}" Tag="shared" Content="{Binding Shared}" ToolTip="This is a Shared parameter"/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource built-in}" Tag="shared" Content="{Binding BuiltIn}" ToolTip="This is a Built-in parameter. Cannot be deleted."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource in-use}" Tag="in use" Content="{Binding IsUsed}" ToolTip="The parameter is either associated, used as a label or used in a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource fromF}" Tag="dF" Content="{Binding Formula}" ToolTip="The parameter is driven by a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource inF}" Tag="uF" Content="{Binding UsedInFormula}" ToolTip="The parameter is used in a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource report}" Tag="report" Content="{Binding Reporting}" ToolTip="Reporting parameter"/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource label}" Tag="label" Content="{Binding Label}" ToolTip="The parameter is used in a label."/>
                                        </StackPanel>
                                        <!--The Value Slider-->
                                        <!--Delay makes the UI responsive-->
                                        <Slider Style="{DynamicResource RoundSliderStyle}" Value="{Binding RevitValue, Delay=500}" HorizontalContentAlignment="Center" IsSnapToTickEnabled="True" TickFrequency="0.01"
                                                Maximum="{Binding RevitValue, Converter={StaticResource MultiplyConverter}, Mode=OneTime}" Grid.Column="2" Margin="10 2 10 0" 
                                                Foreground="{Binding Editable, Converter={StaticResource BoolToColorConverter}}" IsEnabled="{Binding Editable}"/>
                                        <!--The Value-->
                                        <Border Background="White" CornerRadius="15" Grid.Column="3">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Gray" Direction="300" BlurRadius="8" ShadowDepth="3" Opacity="0.25"/>
                                            </Border.Effect>
                                        </Border>
                                        <TextBox Grid.Column="3" Style="{StaticResource EnterText}" Text="{Binding UIValue, UpdateSourceTrigger=LostFocus}"
                                                 Foreground="{Binding Editable, Converter={StaticResource BoolToColorConverter}}" IsEnabled="{Binding Editable}">
                                            <!--PreviewTextInput="txtAnswer_PreviewTextInput">-->
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DockPanel>
                </Expander>
                <Separator Style="{DynamicResource SimpleSeparatorStyle}"/>
                <!--BuiltIn Parameters-->
                <Expander Style="{StaticResource RightExpander}" x:Name="BuiltInParameters" IsExpanded="True" Header="BuiltIn Parameters">
                    <DockPanel FlowDirection="LeftToRight" LastChildFill="True">
                        <ItemsControl ItemsSource="{Binding BuiltInParameters}" Grid.IsSharedSizeScope="True" DockPanel.Dock="Top">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Style="{StaticResource ItemControlGridStyle}" Visibility="{Binding Visible, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="10"/>
                                        </Grid.ColumnDefinitions>
                                        <!--The Name-->
                                        <Border Background="White" CornerRadius="15">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Gray" Direction="300" BlurRadius="8" ShadowDepth="3" Opacity="0.25"/>
                                            </Border.Effect>
                                        </Border>
                                        <TextBox Text="{Binding Name, Mode=OneWay}"  ToolTip="{Binding Name}" Style="{StaticResource EnterText}" IsReadOnly="True" Foreground="{Binding Editable, Converter={StaticResource BoolToColorConverter}}"/>
                                        <!--Tags-->
                                        <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="2 0">
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource shared}" Tag="shared" Content="{Binding Shared}" ToolTip="This is a Shared parameter"/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource built-in}" Tag="built-in" Content="{Binding BuiltIn}" ToolTip="This is a Built-in parameter. Cannot be deleted."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource in-use}" Tag="in use" Content="{Binding IsUsed}" ToolTip="The parameter is either associated, used as a label or used in a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource fromF}" Tag="dF" Content="{Binding Formula}" ToolTip="The parameter is driven by a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource inF}" Tag="uF" Content="{Binding UsedInFormula}" ToolTip="The parameter is used in a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource report}" Tag="report" Content="{Binding Reporting}" ToolTip="Reporting parameter"/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource label}" Tag="label" Content="{Binding Label}" ToolTip="The parameter is used in a label."/>
                                        </StackPanel>
                                        <!--The Value Slider-->
                                        <Slider Style="{DynamicResource RoundSliderStyle}" Value="{Binding RevitValue, Delay=500}" HorizontalContentAlignment="Center" IsSnapToTickEnabled="True" TickFrequency="0.01"
                                                Maximum="{Binding RevitValue, Converter={StaticResource MultiplyConverter}, Mode=OneTime}" Grid.Column="2" Margin="10 2 10 0" 
                                                Foreground="{Binding Editable, Converter={StaticResource BoolToColorConverter}}" IsEnabled="{Binding Editable}"/>
                                        <!--The Value-->
                                        <Border Background="White" CornerRadius="15" Grid.Column="3">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Gray" Direction="300" BlurRadius="8" ShadowDepth="3" Opacity="0.25"/>
                                            </Border.Effect>
                                        </Border>
                                        <TextBox Grid.Column="3" Style="{StaticResource EnterText}" Text="{Binding UIValue, UpdateSourceTrigger=LostFocus}"
                                                 Foreground="{Binding Editable, Converter={StaticResource BoolToColorConverter}}" IsEnabled="{Binding Editable}">
                                            <!--PreviewTextInput="txtAnswer_PreviewTextInput">-->
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DockPanel>
                </Expander>
                <Separator Style="{DynamicResource SimpleSeparatorStyle}"/>
                <!--Yes/No Parameters-->
                <Expander Style="{StaticResource RightExpander}" x:Name="YesNoParameters" IsExpanded="True" Header="Yes/No Parameters">
                    <DockPanel FlowDirection="LeftToRight" LastChildFill="True">
                        <ItemsControl ItemsSource="{Binding CheckParameters}" Grid.IsSharedSizeScope="True" DockPanel.Dock="Top">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Style="{StaticResource ItemControlGridStyle}" Visibility="{Binding Visible, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="10"/>
                                        </Grid.ColumnDefinitions>
                                        <!--The Name-->
                                        <Border Background="White" CornerRadius="15">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Gray" Direction="300" BlurRadius="8" ShadowDepth="3" Opacity="0.25"/>
                                            </Border.Effect>
                                        </Border>
                                        <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"  ToolTip="{Binding Name}" Style="{StaticResource EnterText}" Foreground="{Binding Editable, Converter={StaticResource BoolToColorConverter}}">
                                            <TextBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
                                                    <MenuItem Header="{Binding TypeOrInstance}" Command="{Binding TypeToInstanceCommand}"/>
                                                </ContextMenu>
                                            </TextBox.ContextMenu>
                                        </TextBox>
                                        <!--Tags-->
                                        <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="2 0">
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource shared}" Tag="shared" Content="{Binding Shared}" ToolTip="This is a Shared parameter"/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource built-in}" Tag="shared" Content="{Binding BuiltIn}" ToolTip="This is a Built-in parameter. Cannot be deleted."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource built-in}" Tag="shared" Content="{Binding BuiltIn}" ToolTip="This is a Built-in parameter. Cannot be deleted."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource in-use}" Tag="in use" Content="{Binding IsUsed}" ToolTip="The parameter is either associated, used as a label or used in a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource fromF}" Tag="dF" Content="{Binding Formula}" ToolTip="The parameter is driven by a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource inF}" Tag="uF" Content="{Binding UsedInFormula}" ToolTip="The parameter is used in a formula."/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource report}" Tag="report" Content="{Binding Reporting}" ToolTip="Reporting parameter"/>
                                            <ContentControl ContentTemplate="{StaticResource TagElement}" Visibility="{Binding TagVisible, Converter={StaticResource BoolToVisibilityConverter}}" Background="{StaticResource label}" Tag="label" Content="{Binding Label}" ToolTip="The parameter is used in a label."/>
                                        </StackPanel>
                                        <!--The CheckBox-->
                                        <CheckBox IsChecked="{Binding RevitValue, Converter={StaticResource BoolToCheckedConverter}}" Grid.Column="2" HorizontalAlignment="Right" Margin="0,10,0,0" BorderThickness="0" 
                                                  Foreground="{Binding Editable, Converter={StaticResource BoolToColorConverter}}" IsEnabled="{Binding Editable}">
                                            <CheckBox.Effect>
                                                <DropShadowEffect Color="Gray" Direction="300" BlurRadius="8" ShadowDepth="2" Opacity="0.25"/>
                                            </CheckBox.Effect>
                                        </CheckBox>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DockPanel>
                </Expander>
            </DockPanel>
        </ScrollViewer>
    </DockPanel>
</Window>
